let mut s = String::from("hello");

let r1 = &s; // 没问题
let r2 = &s; // 没问题
println!("{} and {}", r1, r2);
// 此位置之后 r1 和 r2 不再使用

let r3 = &mut s; // 没问题
println!("{}", r3);

// 多个不可变引用是可以的，
// 因为没有哪个只能读取数据的人有能力影响其他人读取到的数据。

// 不可变引用 r1 和 r2 的作用域在 println! 最后一次使用之后结束，
// 这也是创建可变引用 r3 的地方。它们的作用域没有重叠，
// 所以代码是可以编译的。

